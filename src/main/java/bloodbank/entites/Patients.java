package bloodbank.entites;
// Generated May 13, 2022 3:58:53 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Patients generated by hbm2java
 */
@Entity
@Table(name="patients"
    ,catalog="blood_bank"
)
public class Patients  implements java.io.Serializable {


     private Integer patientId;
     private Staff staff;
     private String firstName;
     private String lastName;
     private String gender;
     private String address;
     private String bloodType;
     private String natId;
     private Date dateOfBirth;
     private String primaryNumber;
     private String secondaryNumber;
     private Set<PatientHistory> patientHistories = new HashSet<PatientHistory>(0);
     private Set<BloodTransactions> bloodTransactionses = new HashSet<BloodTransactions>(0);

    public Patients() {
    }

	
    public Patients(Staff staff, String firstName, String lastName, String gender, String address, String bloodType, String natId, Date dateOfBirth, String primaryNumber) {
        this.staff = staff;
        this.firstName = firstName;
        this.lastName = lastName;
        this.gender = gender;
        this.address = address;
        this.bloodType = bloodType;
        this.natId = natId;
        this.dateOfBirth = dateOfBirth;
        this.primaryNumber = primaryNumber;
    }
    public Patients(Staff staff, String firstName, String lastName, String gender, String address, String bloodType, String natId, Date dateOfBirth, String primaryNumber, String secondaryNumber, Set<PatientHistory> patientHistories, Set<BloodTransactions> bloodTransactionses) {
       this.staff = staff;
       this.firstName = firstName;
       this.lastName = lastName;
       this.gender = gender;
       this.address = address;
       this.bloodType = bloodType;
       this.natId = natId;
       this.dateOfBirth = dateOfBirth;
       this.primaryNumber = primaryNumber;
       this.secondaryNumber = secondaryNumber;
       this.patientHistories = patientHistories;
       this.bloodTransactionses = bloodTransactionses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="Patient_id", unique=true, nullable=false)
    public Integer getPatientId() {
        return this.patientId;
    }
    
    public void setPatientId(Integer patientId) {
        this.patientId = patientId;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="Doctor_id", nullable=false)
    public Staff getStaff() {
        return this.staff;
    }
    
    public void setStaff(Staff staff) {
        this.staff = staff;
    }

    
    @Column(name="firstName", nullable=false, length=45)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    
    @Column(name="lastName", nullable=false, length=45)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    
    @Column(name="Gender", nullable=false, length=10)
    public String getGender() {
        return this.gender;
    }
    
    public void setGender(String gender) {
        this.gender = gender;
    }

    
    @Column(name="Address", nullable=false)
    public String getAddress() {
        return this.address;
    }
    
    public void setAddress(String address) {
        this.address = address;
    }

    
    @Column(name="Blood_Type", nullable=false, length=45)
    public String getBloodType() {
        return this.bloodType;
    }
    
    public void setBloodType(String bloodType) {
        this.bloodType = bloodType;
    }

    
    @Column(name="Nat_id", nullable=false, length=45)
    public String getNatId() {
        return this.natId;
    }
    
    public void setNatId(String natId) {
        this.natId = natId;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="Date_of_Birth", nullable=false, length=10)
    public Date getDateOfBirth() {
        return this.dateOfBirth;
    }
    
    public void setDateOfBirth(Date dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
    }

    
    @Column(name="Primary_Number", nullable=false, length=45)
    public String getPrimaryNumber() {
        return this.primaryNumber;
    }
    
    public void setPrimaryNumber(String primaryNumber) {
        this.primaryNumber = primaryNumber;
    }

    
    @Column(name="Secondary_Number", length=45)
    public String getSecondaryNumber() {
        return this.secondaryNumber;
    }
    
    public void setSecondaryNumber(String secondaryNumber) {
        this.secondaryNumber = secondaryNumber;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="patients")
    public Set<PatientHistory> getPatientHistories() {
        return this.patientHistories;
    }
    
    public void setPatientHistories(Set<PatientHistory> patientHistories) {
        this.patientHistories = patientHistories;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="patients")
    public Set<BloodTransactions> getBloodTransactionses() {
        return this.bloodTransactionses;
    }
    
    public void setBloodTransactionses(Set<BloodTransactions> bloodTransactionses) {
        this.bloodTransactionses = bloodTransactionses;
    }




}


